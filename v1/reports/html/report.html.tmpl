<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <script src="https://cdn.plot.ly/plotly-2.14.0.min.js"></script>
        <style>
          body {
            margin: 25px 100px 100px 50px;
            background-color: lavender;
          }
          div.chart {
          }
          table {
            background-color: #eee6fa;
            border: 2px solid black;
            padding: 3px;
            margin: 3px;
          }
          td {
            padding: 4px;
            border: 1px solid gray;
          }
        </style>
    <title>{{.Title}}</title>
    </head>
    <body>
      <h1>{{.Title}}</h1>
      <!-- TODO Ugly. there's a better way to do this -->
      {{range .Sections}}
      {{if eq .Type "jobs_table"}}
      {{template "jobs_table" .}}
      {{else if eq .Type "horizontal_bar_chart"}}
      {{template "horizontal_bar_chart" .}}
      {{else if eq .Type "results_table"}}
      {{template "results_table" .}}
      {{else if eq .Type "horizontal_delta_chart"}}
      {{template "horizontal_delta_chart" .}}
      {{else if eq .Type "results_delta_table"}}
      {{template "results_delta_table" .}}
      {{else if eq .Type "trend_chart"}}
      {{template "trend_chart" .}}
      {{else if eq .Type "horizontal_box_chart"}}
      {{template "horizontal_box_chart" .}}
      {{end}}
      {{end}}
    </body>
</html>

{{define "jobs_table"}}
      <details>
        <summary>Show jobs details</summary>
        <table>
          <tr>
            <th>Job</th>
            <th>Source</th>
            <th>Filter</th>
            <th>Repetitions</th>
            <th>Go</th>
            <th>Worker</th>
            <th>Job Info</th>
          </tr>
          {{range .Jobs}}
          <tr>
            <td>{{.Id}}</td>
            <td>{{.Parameters.GitRef}}<br>{{.Parameters.GitRemote}}<br>({{.SHA}})</td>
            <td>{{.Parameters.TestsFilterExpr}}</td>
            <td>{{.Parameters.Reps}} x {{.Parameters.TestMinRuntime}}</td>
            <td>{{.GoVersion}}<br>({{.Parameters.GoPath}})</td>
            <td>{{.WorkerInfo.Version}}<br>{{.WorkerInfo.Hostname}}<br>{{.WorkerInfo.Uname}}</td>
            <td>Submitted by {{.Parameters.Username}} at {{.Created}}</td>
          </tr>
          {{end}}
        </table>
      </details>
{{end}}

{{define "results_table"}}
      <h2></h2>
      {{if .Hidden}}
      <details>
        <summary>Show results table</summary>
      {{end}}
      <table>
        <tr>
          <th></th>
          {{range .JobLabels}}
          <th>{{.}}</th>
          {{end}}
        </tr>
        {{range .ResultsRows}}
        <tr>
          <th>{{.BenchmarkName}}</th>
          {{range .Values}}
          <td>{{.}}</td>
          {{end}}
        </tr>
        {{end}}
      </table>
      {{if .Hidden}}
      </details>
      {{end}}
{{end}}

{{define "results_delta_table"}}
      <h2></h2>
      {{if .Hidden}}
      <details>
        <summary>Show results table</summary>
      {{end}}
      <table>
        <tr>
          <th></th>
          {{range .JobLabels}}
          <th>{{.}}</th>
          {{end}}
          <th>Î”%</th>
        </tr>
        {{range .ResultsRows}}
        <tr>
          <th>{{.BenchmarkName}}</th>
          {{range .Values}}
          <td>{{.}}</td>
          {{end}}
        </tr>
        {{end}}
      </table>
      {{if .Hidden}}
      </details>
      {{end}}
{{end}}

{{define "horizontal_bar_chart"}}
      <h2>{{.Title}}</h2>
      <small>{{.SubText}}</small>
      <div id="{{.ChartId}}" class="chart"></div>
      <script>
        Plotly.newPlot(
          {{.ChartId}},
          [
            {{range .Groups}}
            {
              name: {{.Name}},
              y: {{.ExperimentNames}},
              x: {{.Averages}},
              text: {{.BarLabels}},
              hoverinfo: "name+text",
              hovertext: {{.HoverLabels}},
              error_x: {
                type: 'data',
                array: {{.Deviation}},
                visible: true
              },
              type: 'bar',
              orientation: 'h',
            },
            {{end}}
          ],
          {
            barmode: 'group',
            yaxis: {
              title: {{.YTitle}},
              ticklabelposition: "inside",
              autorange: "reversed",
            },
            xaxis: {
              title: {{.XTitle}},
            },
            autosize: true,
            height: ({{len .Groups}} * 15) + ({{.NumBenchmarks}} * 80) + 50,
            margin: {
              t: 20,
              b: 30,
            },
          }
        );
      </script>
{{end}}

{{define "horizontal_delta_chart"}}
      <h2>{{.Title}}</h2>
      <small>{{.SubText}}</small>
      <div id="{{.ChartId}}" class="chart"></div>
      <script>
      Plotly.newPlot(
        {{.ChartId}},
        [{
          type: 'bar',
          y: {{.ExperimentNames}},
          x: {{.Deltas}},
          text: {{.DeltaLabels}},
          marker: {
            color: {{.BarColors}}
          },
          orientation: 'h'
        }],
        {
          xaxis: {
            title: {{.XTitle}},
            ticksuffix: "%",
            zeroline: true,
            zerolinewidth: 3,
          },
          yaxis: {
            ticklabelposition: "inside",
            automargin: true,
            dtick: 1,
            autorange: "reversed",
          },
          autosize: true,
          height: ({{ .NumBenchmarks}} * 50) + 50,
          margin: {
            t: 20,
            b: 30,
          }
        }
      );
      </script>
{{end}}

{{define "trend_chart"}}
      <h2>{{.Title}}</h2>
      <small>{{.SubText}}</small>
      <div id="{{.ChartId}}" class="chart"></div>
      <script>
      Plotly.newPlot(
        {{.ChartId}}, // Id of container element
        [ // Data: each horizontal line series is a different benchmark
          {{range .Series}}
          {
            "name": "{{.BenchmarkName}}",
            "x": {{.JobIds}},
            "y": {{.Values}},
            "text": {{.HoverLabels}},
            "hoverinfo": "text",
            "mode": "lines+markers",
            "type": "scatter",
            "error_y": {
              "type": "data",
              "array": {{.Deviation}},
              "visible": true,
              "symmetric": true
            }
          },
          {{end}}
        ],
        {// Layout
          yaxis: {
            title: {{.YTitle}},
          },
          xaxis: {
            title: {{.XTitle}},
            tickvals: {{.JobIds}},
            ticktext : {{.JobLabels}},
          }
        }
      );
    </script>
{{end}}

{{define "horizontal_box_chart"}}
      <h2>{{.Title}}</h2>
      <small>{{.SubText}}</small>
      <div id="{{.ChartId}}" class="chart"></div>
      <script>
        Plotly.newPlot(
          {{.ChartId}}, // Id of container element
          [ // Data: each horizontal line series is a different benchmark
            {{range .Experiments}}
            {
              name: {{.Name}},
              x: {{.Values}},
              text: {{.Labels}},
              type: 'box',
              jitter: 0.5,
              pointpos: 0.0,
              boxpoints: 'all',
              showlegend: false,
              hoverinfo: "text",
            },
            {{end}}
          ],
          { // Layout
            yaxis: {
              title: "",
              ticklabelposition: "inside",
              autorange: "reversed",
            },
            xaxis: {
              title: {{.XTitle}},
            },
            autosize: true,
            height: ( 2  * 15) + ( {{.NumBenchmarks}}  * 80) + 50,
            margin: {
              t: 20,
              b: 30,
            },
          }
        );
      </script>
{{end}}
